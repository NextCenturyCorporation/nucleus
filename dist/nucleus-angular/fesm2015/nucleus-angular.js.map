{"version":3,"file":"nucleus-angular.js","sources":["ng://nucleus-angular/wrappers/core/common.angular-component.ts","ng://nucleus-angular/wrappers/core/filter.angular-component.ts","ng://nucleus-angular/wrappers/core/filter.angular-module.ts","ng://nucleus-angular/wrappers/core/search.angular-component.ts","ng://nucleus-angular/wrappers/core/search.angular-module.ts","ng://nucleus-angular/wrappers/text-cloud/text-cloud.angular-component.ts","ng://nucleus-angular/wrappers/text-cloud/text-cloud.angular-module.ts"],"sourcesContent":["/**\n * Copyright 2019 Next Century Corporation\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AfterViewInit, ElementRef, Input, OnChanges } from '@angular/core';\n\nimport { CoreUtil } from 'nucleus/dist/core/core.util';\nimport { Dataset } from 'nucleus/dist/core/models/dataset';\nimport { FilterService } from 'nucleus/dist/core/services/filter.service';\n\nexport abstract class NucleusCommonAngularComponent implements AfterViewInit, OnChanges {\n    @Input() dataset: Dataset;\n    @Input() filterService: FilterService;\n    @Input() id: string;\n    @Input() options: Record<string, any>;\n\n    private _visualizationIsInitialized: boolean = false;\n\n    constructor() {}\n\n    protected doesHaveSubclassInputs(): boolean {\n        return true;\n    }\n\n    protected abstract findWrappedElement(): HTMLElement;\n\n    protected abstract initWrappedElement(element: HTMLElement): void;\n\n    protected onWrapperAfterViewInit(): void {\n        // Override if needed.\n    }\n\n    protected onWrapperChanges(): void {\n        // Override if needed.\n    }\n\n    protected abstract retrieveWrappedElementObservedAttributes(): string[];\n\n    ngAfterViewInit() {\n        this.onWrapperAfterViewInit();\n\n        // Call ngOnChanges to initialize the visualization if needed after the HTML elements are stable.\n        this.ngOnChanges(undefined);\n    }\n\n    ngOnChanges(__changes) {\n        // Ensure ALL required properties are set before calling init on the visualization.\n        if (this.id && this.dataset && this.filterService && this.options && this.doesHaveSubclassInputs()) {\n            const wrappedElement = this.findWrappedElement();\n            this.options.id = wrappedElement.getAttribute('id');\n            if (wrappedElement) {\n                CoreUtil.updateElementAttributes(wrappedElement, this.retrieveWrappedElementObservedAttributes(), this.options);\n\n                this.onWrapperChanges();\n\n                if (!this._visualizationIsInitialized) {\n                    this.initWrappedElement(wrappedElement);\n                    this._visualizationIsInitialized = true;\n                }\n            }\n        }\n    }\n}\n","/**\n * Copyright 2019 Next Century Corporation\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { CoreUtil } from 'nucleus/dist/core/core.util';\nimport { NucleusCommonAngularComponent } from './common.angular-component';\nimport { NucleusFilter } from 'nucleus/dist/core/components/filter.web-component';\n\nconst FILTER_COMPONENT_TEMPLATE = `\n<nucleus-filter [attr.id]=\"id + '-filter'\"></nucleus-filter>\n`;\n\n@Component({\n    selector: 'app-nucleus-angular-filter',\n    template: FILTER_COMPONENT_TEMPLATE,\n    encapsulation: ViewEncapsulation.Emulated,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NucleusFilterAngularComponent extends NucleusCommonAngularComponent {\n    @Input() searchElement: any;\n    @Input() visInputElement: any;\n    @Input() visOutputElement: any;\n\n    constructor(public elementRef: ElementRef) {\n        super();\n    }\n\n    /**\n     * @override\n     */\n    protected doesHaveSubclassInputs(): boolean {\n        return !!(this.searchElement && this.visInputElement && this.visOutputElement);\n    }\n\n    /**\n     * @override\n     */\n    protected findWrappedElement(): NucleusFilter {\n        return this.elementRef.nativeElement.querySelector('#' + this.id + '-filter') as NucleusFilter;\n    }\n\n    /**\n     * @override\n     */\n    protected initWrappedElement(filterElement: NucleusFilter): void {\n        filterElement.init(this.dataset, this.filterService, {\n            search: this.searchElement,\n            visInput: this.visInputElement,\n            visOutput: this.visOutputElement\n        });\n    }\n\n    /**\n     * @override\n     */\n    protected onWrapperAfterViewInit(): void {\n        const filterElement: NucleusFilter = this.findWrappedElement();\n\n        // Add event propagation listeners after the HTML elements are stable.\n        CoreUtil.addEventPropagationListener(this.elementRef.nativeElement, filterElement, 'valuesFiltered');\n    }\n\n    /**\n     * @override\n     */\n    protected retrieveWrappedElementObservedAttributes(): string[] {\n        return NucleusFilter.observedAttributes;\n    }\n\n    /**\n     * Updates filters (creates and/or deletes) using the given values.\n     */\n    public updateFilteredValues(values: any|any[]): void {\n        const filterElement: NucleusFilter = this.findWrappedElement();\n        filterElement.updateFilteredValues(values);\n    }\n}\n","/**\n * Copyright 2019 Next Century Corporation\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NucleusFilterAngularComponent } from './filter.angular-component';\n\n@NgModule({\n    declarations: [NucleusFilterAngularComponent],\n    exports: [NucleusFilterAngularComponent],\n    entryComponents: [NucleusFilterAngularComponent],\n    imports: [\n        CommonModule\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class NucleusFilterAngularModule { }\n","/**\n * Copyright 2019 Next Century Corporation\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { AbstractFilter, AbstractFilterDesign } from 'nucleus/dist/core/models/filters';\nimport { AbstractSearchService } from 'nucleus/dist/core/services/abstract.search.service';\nimport { CoreUtil } from 'nucleus/dist/core/core.util';\nimport { NucleusAggregation } from 'nucleus/dist/core/components/aggregation.web-component';\nimport { NucleusCommonAngularComponent } from './common.angular-component';\nimport { NucleusGroup } from 'nucleus/dist/core/components/group.web-component';\nimport { NucleusSearch } from 'nucleus/dist/core/components/search.web-component';\n\nconst SEARCH_COMPONENT_TEMPLATE = `\n<nucleus-search [attr.id]=\"id + '-search'\">\n    <nucleus-aggregation *ngFor=\"let aggregation of aggregations; let i = index\" [attr.id]=\"id + '-aggregation-' + i\">\n    </nucleus-aggregation>\n    <nucleus-group *ngFor=\"let group of groups; let i = index\" [attr.id]=\"id + '-group-' + i\"></nucleus-group>\n</nucleus-search>\n`;\n\n@Component({\n    selector: 'app-nucleus-angular-search',\n    template: SEARCH_COMPONENT_TEMPLATE,\n    encapsulation: ViewEncapsulation.Emulated,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NucleusSearchAngularComponent extends NucleusCommonAngularComponent {\n    @Input() aggregations: Record<string, any>[];\n    @Input() groups: Record<string, any>[];\n    @Input() options: Record<string, any>;\n    @Input() searchService: AbstractSearchService;\n    @Input() visInputElement: any;\n\n    constructor(public elementRef: ElementRef) {\n        super();\n    }\n\n    /**\n     * @override\n     */\n    protected doesHaveSubclassInputs(): boolean {\n        return !!(this.searchService && this.visInputElement);\n    }\n\n    /**\n     * @override\n     */\n    protected findWrappedElement(): NucleusSearch {\n        return this.elementRef.nativeElement.querySelector('#' + this.id + '-search') as NucleusSearch;\n    }\n\n    /**\n     * @override\n     */\n    protected initWrappedElement(searchElement: NucleusSearch): void {\n        searchElement.init(this.dataset, this.filterService, this.searchService, {\n            visInput: this.visInputElement\n        });\n    }\n\n    /**\n     * @override\n     */\n    protected onWrapperAfterViewInit(): void {\n        const searchElement: NucleusSearch = this.findWrappedElement();\n\n        // Add event propagation listeners after the HTML elements are stable.\n        CoreUtil.addEventPropagationListener(this.elementRef.nativeElement, searchElement, 'searchCanceled');\n        CoreUtil.addEventPropagationListener(this.elementRef.nativeElement, searchElement, 'searchFailed');\n        CoreUtil.addEventPropagationListener(this.elementRef.nativeElement, searchElement, 'searchFinished');\n        CoreUtil.addEventPropagationListener(this.elementRef.nativeElement, searchElement, 'searchLaunched');\n    }\n\n    /**\n     * @override\n     */\n    protected onWrapperChanges(): void {\n        if (this.aggregations) {\n            this.aggregations.forEach((aggregationOptions, index) => {\n                const aggregationElement = this.elementRef.nativeElement.querySelector('#' + this.id + '-aggregation-' +\n                    index) as NucleusAggregation;\n                if (aggregationElement) {\n                    CoreUtil.updateElementAttributes(aggregationElement, NucleusAggregation.observedAttributes, aggregationOptions);\n                }\n            });\n        }\n\n        if (this.groups) {\n            this.groups.forEach((groupOptions, index) => {\n                const groupElement = this.elementRef.nativeElement.querySelector('#' + this.id + '-group-' +\n                    index) as NucleusGroup;\n                if (groupElement) {\n                    CoreUtil.updateElementAttributes(groupElement, NucleusGroup.observedAttributes, groupOptions);\n                }\n            });\n        }\n    }\n\n    /**\n     * @override\n     */\n    protected retrieveWrappedElementObservedAttributes(): string[] {\n        return NucleusSearch.observedAttributes;\n    }\n\n    /**\n     * Runs the search query using the current attributes and filters.  Only call this function if you want to manually trigger a requery.\n     */\n    public runQuery(id: string, filters: AbstractFilter[]): void {\n        const searchElement: NucleusSearch = this.findWrappedElement();\n        searchElement.runQuery();\n    }\n\n    /**\n     * Updates the unshared filters of this search element with the given filters.\n     */\n    public updateFilters(id: string, filters: AbstractFilter[]): void {\n        const searchElement: NucleusSearch = this.findWrappedElement();\n        searchElement.updateFilters(id, filters);\n    }\n\n    /**\n     * Updates the filter designs of this search element (used to find shared filters) with the given filter designs.\n     */\n    public updateFilterDesigns(id: string, filterDesigns: AbstractFilterDesign[]): void {\n        const searchElement: NucleusSearch = this.findWrappedElement();\n        searchElement.updateFilterDesigns(id, filterDesigns);\n    }\n}\n","/**\n * Copyright 2019 Next Century Corporation\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NucleusSearchAngularComponent } from './search.angular-component';\n\n@NgModule({\n    declarations: [NucleusSearchAngularComponent],\n    exports: [NucleusSearchAngularComponent],\n    entryComponents: [NucleusSearchAngularComponent],\n    imports: [\n        CommonModule\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class NucleusSearchAngularModule { }\n","/**\n * Copyright 2019 Next Century Corporation\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, ElementRef, Input, ViewEncapsulation } from '@angular/core';\n\nimport { AbstractSearchService } from 'nucleus/dist/core/services/abstract.search.service';\nimport { CoreUtil } from 'nucleus/dist/core/core.util';\nimport { NucleusCommonAngularComponent } from '../core/common.angular-component';\nimport { NucleusTextCloud } from 'nucleus/dist/visualizations/text-cloud/text-cloud.web-component';\n\nconst VISUALZIATON_COMPONENT_TEMPLATE = `\n<nucleus-text-cloud [attr.id]=\"id + '-angular'\"></nucleus-text-cloud>\n`;\n\n@Component({\n    selector: 'app-nucleus-angular-text-cloud',\n    template: VISUALZIATON_COMPONENT_TEMPLATE,\n    encapsulation: ViewEncapsulation.Emulated,\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NucleusTextCloudAngularComponent extends NucleusCommonAngularComponent {\n    @Input() searchService: AbstractSearchService;\n\n    constructor(public elementRef: ElementRef) {\n        super();\n    }\n\n    /**\n     * Creates and returns the export data for the visualization.\n     */\n    public createExportData(exportFields: { columnName: string, prettyName: string }[], filename: string): { name: string, data: any }[] {\n        const visElement = this.elementRef.nativeElement.querySelector('#' + this.id + '-angular') as NucleusTextCloud;\n        return visElement.createExportData(exportFields, filename);\n    }\n\n    /**\n     * @override\n     */\n    protected doesHaveSubclassInputs(): boolean {\n        return !!this.searchService;\n    }\n\n    /**\n     * @override\n     */\n    protected findWrappedElement(): NucleusTextCloud {\n        return this.elementRef.nativeElement.querySelector('#' + this.id + '-angular') as NucleusTextCloud;\n    }\n\n    /**\n     * @override\n     */\n    protected initWrappedElement(visElement: NucleusTextCloud): void {\n        visElement.init(this.dataset, this.filterService, this.searchService);\n    }\n\n    /**\n     * @override\n     */\n    protected onWrapperAfterViewInit(): void {\n        const visElement: NucleusTextCloud = this.findWrappedElement();\n\n        // Add event propagation listeners after the HTML elements are stable.\n        CoreUtil.addEventPropagationListener(this.elementRef.nativeElement, visElement, 'valuesFiltered');\n        CoreUtil.addEventPropagationListener(this.elementRef.nativeElement, visElement, 'searchCanceled');\n        CoreUtil.addEventPropagationListener(this.elementRef.nativeElement, visElement, 'searchFailed');\n        CoreUtil.addEventPropagationListener(this.elementRef.nativeElement, visElement, 'searchFinished');\n        CoreUtil.addEventPropagationListener(this.elementRef.nativeElement, visElement, 'searchLaunched');\n    }\n\n    /**\n     * Redraws the visualization.\n     */\n    public redraw(): void {\n        const visElement = this.elementRef.nativeElement.querySelector('#' + this.id + '-angular') as NucleusTextCloud;\n        visElement.redraw();\n    }\n\n    /**\n     * @override\n     */\n    protected retrieveWrappedElementObservedAttributes(): string[] {\n        return NucleusTextCloud.observedAttributes;\n    }\n}\n","/**\n * Copyright 2019 Next Century Corporation\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NucleusTextCloudAngularComponent } from './text-cloud.angular-component';\n\n@NgModule({\n    declarations: [NucleusTextCloudAngularComponent],\n    exports: [NucleusTextCloudAngularComponent],\n    entryComponents: [NucleusTextCloudAngularComponent],\n    imports: [\n        CommonModule\n    ],\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class NucleusTextCloudAngularModule { }\n"],"names":[],"mappings":"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"}